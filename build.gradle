plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

bootJar.enabled = false //의존성까지 합쳐서 jar로 빌드
jar.enabled = true

subprojects {
	group = 'com.tradingtrends'
	version = '0.0.1-SNAPSHOT'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/release" }
	}
	dependencies {

		if (project.name != 'common') {
			implementation project(':common')
		}
//		if (project.name != 'eureka' || project.name != 'gateway') {
//			implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//			runtimeOnly 'org.postgresql:postgresql'
//			compileOnly 'org.projectlombok:lombok'
//			annotationProcessor 'org.projectlombok:lombok'
//		}
		if (project.name in ['batch', 'coin', 'corporate', 'notification', 'stock', 'user' ]) {
			implementation 'org.springframework.boot:spring-boot-starter-validation'
			implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
			implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

		}

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.kafka:spring-kafka'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.kafka:spring-kafka-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}

}
