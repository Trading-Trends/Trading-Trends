version: '3.8'

services:
  postgres:
    image: postgres:15.8
    restart: always
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "25432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tradingtrends

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
    container_name: elasticsearch
    environment:
      - node.name=es-node
      - cluster.name=search-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false    # 보안을 비활성화할 경우 (개발용)
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - network.host=0.0.0.0
      - http.port=9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - elk
    command: >
      bash -c "if ! bin/elasticsearch-plugin list | grep -q 'analysis-nori'; then bin/elasticsearch-plugin install analysis-nori; fi && exec elasticsearch"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.2
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
      xpack.monitoring.enabled: "true"
      xpack.monitoring.elasticsearch.hosts: "http://elasticsearch:9200"
    ports:
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

  redis-corporate:
    image: 'redis:latest'
    container_name: redis-corporate
    hostname: redis-corporate
    command: redis-server --requirepass systempass --port 6379
    ports:
      - "26579:6379"

  redis-auth:
    image: 'redis:latest'
    container_name: redis-auth
    hostname: redis-auth
    command: redis-server --requirepass systempass --port 6379
    ports:
      - "26479:6379"

volumes:
  es-data:
    driver: local

networks:
  elk:
    driver: bridge
